"use strict";(self["webpackChunkvarun_website_updated"]=self["webpackChunkvarun_website_updated"]||[]).push([[680],{1934:function(e,t,o){o.d(t,{A:function(){return c}});var i=o(6768),r=o(4232);const a=["innerHTML"];function n(e,t,o,n,s,l){return(0,i.uX)(),(0,i.CE)("div",{class:(0,r.C4)(`reflection_items ${l.addAnimation}`),style:(0,r.Tr)({backgroundColor:o.backgroundColor})},[o.icon&&!o.noCircle?((0,i.uX)(),(0,i.CE)("div",{key:0,class:"circle",style:(0,r.Tr)({"background-image":l.computedBackgroundImage,"border-color":o.textColor,marginBottom:"5px"})},null,4)):(0,i.Q3)("",!0),o.icon&&o.noCircle&&l.borderAdded?((0,i.uX)(),(0,i.CE)("div",{key:1,class:"icon_no_circle",style:(0,r.Tr)({"background-image":l.computedBackgroundImage,marginBottom:"5px"})},null,4)):o.number>0?((0,i.uX)(),(0,i.CE)("div",{key:2,class:"circle number-circle && borderAdded",style:(0,r.Tr)({"background-color":o.textColor,color:o.backgroundColor,"border-color":o.textColor,marginBottom:"5px"})},(0,r.v_)(o.number),5)):(0,i.Q3)("",!0),(0,i.Lk)("h3",{style:(0,r.Tr)({fontSize:o.headerSize,color:o.textColor,textAlign:l.alignText,marginTop:"5px",marginBottom:"5px"})},(0,r.v_)(o.title),5),(0,i.Lk)("p",{style:(0,r.Tr)({color:o.textColor,textAlign:l.alignText,marginTop:"5px",marginBottom:"5px"}),innerHTML:l.formattedDescription},null,12,a)],6)}var s={name:"ReflectionItem",props:{title:{type:String,required:!0},description:{type:String,required:!1,default:null},icon:{type:String,required:!1,default:null},backgroundColor:{type:String,default:"#27422C"},textColor:{type:String,default:"#000000"},borderBool:{type:Boolean,default:!1},number:{type:Number,default:0},headerSize:{type:String,default:"25px"},animationBool:{type:Boolean,default:!1},noCircle:{type:Boolean,default:!1},leftAlignText:{type:Boolean,default:!1}},computed:{computedBackgroundImage(){return this.icon?`url(${this.icon})`:null},formattedDescription(){if(null==this.description)return null;const e=this.description.split(" ");if(e.length<2)return this.description;const t=e.slice(-2).join("&nbsp;"),o=e.slice(0,-2).join(" ");return o+" "+t},addAnimation(){return this.animationBool?"addAnimation":""},borderAdded(){return this.borderBool?"borderAdded":""},alignText(){return this.leftAlignText?"left":"center"}}},l=o(1241);const d=(0,l.A)(s,[["render",n],["__scopeId","data-v-be1078a8"]]);var c=d},5095:function(e,t,o){o.r(t),o.d(t,{default:function(){return P}});var i=o(6768),r=o(5130),a=o.p+"img/b2b.e4609067.png",n=o.p+"img/multiple_harddrives.315d2c53.png",s=o.p+"img/designer_developer.b815e1f6.png";const l={class:"container"},d={key:0,class:"password-overlay"},c={class:"password-box"},u={key:0,class:"password-error"},p={key:1},h={class:"header-content"},g={class:"grid_3fr_1fr"},f={class:"flex_height_fit_items",style:{"background-color":"#000000",padding:"20px","border-radius":"10px"}},m={class:"grid_3fr_1fr"},b={class:"grid_4fr_2fr_1fr"},k={class:"flex_height_fit_items"},v={class:"text-content"},y={class:"grid_3fr_1fr"},w={class:"grid_4fr_2fr_1fr"};function L(e,t,o,L,F,x){const C=(0,i.g2)("projectDetails"),_=(0,i.g2)("sectionContainer"),T=(0,i.g2)("fadeInComponent"),P=(0,i.g2)("reflection-item"),I=(0,i.g2)("slideshow"),E=(0,i.g2)("ReflectionItem");return(0,i.uX)(),(0,i.CE)("div",l,[F.showContent?((0,i.uX)(),(0,i.CE)("div",p,[(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"green-section"},{default:(0,i.k6)((()=>[(0,i.Lk)("div",h,[t[4]||(t[4]=(0,i.Lk)("h1",null,"Lyve Pilot at Seagate Technology",-1)),t[5]||(t[5]=(0,i.Lk)("div",{class:"header-image"},null,-1)),t[6]||(t[6]=(0,i.Lk)("p",{class:"intro-text"},[(0,i.Lk)("i",null," At Seagate Technology, I worked on Lyve Pilot, an innovative data mobility solution that helps enterprises manage and move massive amounts of data across their ecosystem. As a full-stack developer, I contributed to both the frontend and backend development while also ensuring robust testing practices.")],-1)),(0,i.bF)(C,{members:35,role:"Fullstack Developer and Test Engineer",timelineNumber:2,timelineUnit:"years",style:{"margin-top":"20px"},backgroundColor:"#FFFFFF"})])])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"white-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>t[7]||(t[7]=[(0,i.Lk)("h2",null,"Project Overview",-1),(0,i.Lk)("p",null," Lyve Pilot addresses the growing challenge of efficient data movement in enterprise environments. When network transfers become impractical for petabyte-scale data, Lyve Pilot offers a comprehensive solution combining specialized hardware with intelligent software for seamless data mobility. ",-1),(0,i.Lk)("div",{class:"key-points"},[(0,i.Lk)("div",{class:"point"},[(0,i.Lk)("h3",null,"The Challenge"),(0,i.Lk)("p",null,"Moving petabytes of data efficiently while maintaining security and reliability across diverse enterprise environments")]),(0,i.Lk)("div",{class:"point"},[(0,i.Lk)("h3",null,"The Solution"),(0,i.Lk)("p",null,"A comprehensive data mobility platform with hardware devices and intelligent software for secure, efficient data transport")]),(0,i.Lk)("div",{class:"point"},[(0,i.Lk)("h3",null,"My Role"),(0,i.Lk)("p",null,"Full-stack developer working on Vue.js frontend, microservices backend, and automated testing infrastructure")])],-1),(0,i.Lk)("h3",null,"Target Audience",-1),(0,i.Lk)("div",{class:"grid_2fr_1fr"},[(0,i.Lk)("div",null,[(0,i.Lk)("h4",null,"B2B"),(0,i.Lk)("img",{src:a,alt:"Target Audience",class:"target_audience_image",width:"80%",height:"auto"}),(0,i.Lk)("p",null,"The team was focused on B2B companies as they tended to have more complex data environments, and more complex data needs.")]),(0,i.Lk)("div",null,[(0,i.Lk)("h4",null,"High Storage Companies"),(0,i.Lk)("img",{src:n,alt:"Target Audience",class:"target_audience_image",width:"80%",height:"auto"}),(0,i.Lk)("p",null,"We especially focused on companies that had a large amount of data to move, and needed a way to do it efficiently, such as self driving car companies.")])],-1)]))),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"green-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>[t[9]||(t[9]=(0,i.Lk)("h2",null,"My Role",-1)),t[10]||(t[10]=(0,i.Lk)("div",{class:"grid_2fr_1fr",style:{"align-items":"center"}},[(0,i.Lk)("div",{class:"text-content"},[(0,i.Lk)("p",null,[(0,i.eW)(" As a full-stack developer with "),(0,i.Lk)("b",{style:{"font-weight":"800"}},"design experience"),(0,i.eW)(", I often bridged the gap between our 35-engineer team and a single core designer. ")]),(0,i.Lk)("p",null," I implemented designs, clarified them to engineers, ensured accurate execution, and helped the designer understand the codebase to align on decisions and timelines. ")]),(0,i.Lk)("div",{class:"designer_dev_eng"},[(0,i.Lk)("img",{src:s,alt:"Designer, Developer, Engineer",class:"designer_dev_eng_image",width:"100%",height:"auto"})])],-1)),t[11]||(t[11]=(0,i.Lk)("h3",null,"Main Software Roles",-1)),t[12]||(t[12]=(0,i.Lk)("p",null,"I of course contributed to the codebase as well - below where spaces I made impacts.",-1)),(0,i.Lk)("div",g,[(0,i.bF)(P,{title:"Frontend Developer",description:"Led the development of critical frontend features using Vue.js and TypeScript, \n                            focusing on creating intuitive interfaces for complex data operations.",backgroundColor:"#FFFFFF",icon:"/assets/seagate/frontend.png",noCircle:"true",leftAlignText:"true"}),(0,i.bF)(P,{title:"Backend Developer",description:"Led the development of critical backend features using Node.js and Express, \n                            focusing on creating intuitive interfaces for complex data operations.",backgroundColor:"#FFFFFF",icon:"/assets/seagate/backend.png",noCircle:"true",leftAlignText:"true"}),(0,i.bF)(P,{title:"Automation Tester",description:"Led the development of critical backend features using Node.js and Express, \n                            focusing on creating intuitive interfaces for complex data operations.",backgroundColor:"#FFFFFF",icon:"/assets/seagate/test_engineer.png",noCircle:"true",leftAlignText:"true"}),t[8]||(t[8]=(0,i.Lk)("h3",null,null,-1))])])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"white-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>[t[14]||(t[14]=(0,i.Lk)("h2",null,"Lyve Pilot Code Architecture",-1)),t[15]||(t[15]=(0,i.Lk)("p",null," The backend of Lyve Pilot is a microservices architecture. There are five core services: Portal-Device, Portal-API, Portal-Monitor, Portal-Registration, Portal-Telemetry. ",-1)),(0,i.Lk)("div",f,[(0,i.bF)(I,{folderPath:"/assets/seagate/microservices",fileType:"png",numberOfImages:6,autoPlay:!1,headerArray:["Portal-Client","Portal-Device","Portal-API","Portal-Monitor","Portal-Registration","Portal-Telemetry"],bodyArray:["The Portal-Client is the main frontend application that users interact with. It is built with Vue.js and TypeScript.","The Portal-Device is the service that manages the devices that are connected to the system. It is built with Node.js and Express.","The Portal-API is the service that provides the API for the frontend. It is built with Node.js and Express.","The Portal-Monitor is the service that monitors the other microservices. It is built with Node.js and Express.","The Portal-Registration is the service that registers the users that are connected to the system. It is built with Node.js and Express.","The Portal-Telemetry is the service that collects the telemetry data from the devices that are connected to the system. It is built with Node.js and Express."],style:{"max-width":"400px",width:"100%",margin:"auto"},backgroundColor:""}),t[13]||(t[13]=(0,i.Lk)("div",{class:"image-container microservices_img"},null,-1))])])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"green-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>[t[16]||(t[16]=(0,i.Lk)("h2",null,"Frontend Development",-1)),t[17]||(t[17]=(0,i.Lk)("p",null," Led the development of critical frontend features using Vue.js and TypeScript, focusing on creating intuitive interfaces for complex data operations. ",-1)),(0,i.bF)(I,{class:"frontend-slides",folderPath:"/assets/seagate/frontend",fileType:"png",numberOfImages:4,autoPlay:!1,headerArray:["The Login Page","The Dashboard","Operation Dialogs","Mapping Bundles Across Devices"],bodyArray:["The login page is the starting point for all users. On initial login, they use a token emailed to them beforehand, and then setup their account.","The dashboard is the main page for all users. It shows the current status of the data transfer, past operations completed, and the devices and volumes involved.","The core of Lyve Pilot is the operation dialogs. They are used to map bundles across devices, and to perform the data transfer. The three main operations are import, copy, and export.","One of the most core components of Lyve Pilot is how we display the locations of bundles and history of operations on them, across the entire ecosystem. We used a tree view to display the locations of bundles, and a history of operations on them."],buttonColor:"#004D25",textLeft:"true"})])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"white-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>[t[18]||(t[18]=(0,i.Lk)("h2",null,"Backend Development",-1)),t[19]||(t[19]=(0,i.Lk)("p",null," Contributed to the microservices architecture using Node.js and Express, developing and maintaining five core services for the platform. ",-1)),t[20]||(t[20]=(0,i.Lk)("h3",null,"Responsibilitites",-1)),(0,i.Lk)("div",m,[(0,i.bF)(P,{title:"Fixing Bugs",description:"I was regularly tasked with fixing bugs in the codebase, and ensuring that the code was working as expected.",backgroundColor:"#091C00",textColor:"#FFFFFF",headerSize:"20px",number:1}),(0,i.bF)(P,{title:"Building New API Routes",description:"I was regularly tasked with building new API routes, in order to properly access the data from the devices.",backgroundColor:"#091C00",textColor:"#FFFFFF",headerSize:"20px",number:2}),(0,i.bF)(P,{title:"Database Management",description:"From time to time, I would make new database tables, check for data integrity, and even migrate the database to a new version.",backgroundColor:"#091C00",textColor:"#FFFFFF",headerSize:"20px",number:3})]),t[21]||(t[21]=(0,i.Lk)("h3",null," My Backend Impacts",-1)),t[22]||(t[22]=(0,i.Lk)("p",null,"These are the main microservices and databases I worked on.",-1)),(0,i.Lk)("div",b,[(0,i.bF)(P,{title:"Portal-Device",description:"The Portal-Device is the service that manages the devices that are connected to the system. It is built with Node.js and Express.",icon:"/assets/seagate/microservices_1.png",headerSize:"20px",backgroundColor:"#ffffff"}),(0,i.bF)(P,{title:"Portal-API",description:"The Portal-API is the service that provides the API for the frontend. It is built with Node.js and Express.",icon:"/assets/seagate/microservices_2.png",headerSize:"20px",backgroundColor:"#ffffff"}),(0,i.bF)(P,{title:"Portal-Monitor",description:"The Portal-Monitor is the service that monitors the other microservices. It is built with Node.js and Express.",icon:"/assets/seagate/microservices_3.png",headerSize:"20px",backgroundColor:"#ffffff"}),(0,i.bF)(P,{title:"MongoDB Database",description:"The MongoDB Database is the database that stores the data for the microservices. It is built with MongoDB.",icon:"/assets/seagate/microservices_6.png",headerSize:"20px",backgroundColor:"#ffffff"})])])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"green-section",style:{"text-align":"left"}},{default:(0,i.k6)((()=>[t[27]||(t[27]=(0,i.Lk)("h2",null,"Testing and Quality Assurance",-1)),(0,i.Lk)("div",k,[(0,i.Lk)("div",v,[t[23]||(t[23]=(0,i.Lk)("p",null," Established comprehensive testing practices using Selenium for automated testing, ensuring reliability and performance of the Lyve Pilot platform. ",-1)),t[24]||(t[24]=(0,i.Lk)("p",null,[(0,i.eW)(" At Seagate, I set up a Selenium-based testing framework for the Lyve Pilot platform and integrated it with a CI pipeline for automated test execution and reporting. The team built "),(0,i.Lk)("b",null,"250+"),(0,i.eW)(" automated tests and caught "),(0,i.Lk)("b",null,"hundreds"),(0,i.eW)(" of bugs. ")],-1)),t[25]||(t[25]=(0,i.Lk)("h3",null,"Goals",-1)),(0,i.Lk)("div",y,[(0,i.bF)(P,{title:"Increase Frontend Testing",backgroundColor:"#E7EDE8",headerSize:"20px",number:1}),(0,i.bF)(P,{title:"Improving Scalability Testing",backgroundColor:"#E7EDE8",headerSize:"20px",number:2}),(0,i.bF)(P,{title:"Catching any and all User Bugs",backgroundColor:"#E7EDE8",headerSize:"20px",number:3})])]),t[26]||(t[26]=(0,i.Lk)("div",{class:"image-container selenium_img",role:"img","aria-label":"Testing"},null,-1))])])),_:1})])),_:1}),(0,i.bF)(T,null,{default:(0,i.k6)((()=>[(0,i.bF)(_,{class:"white-section"},{default:(0,i.k6)((()=>[t[28]||(t[28]=(0,i.Lk)("h2",null,"Reflections & Key Learnings",-1)),t[29]||(t[29]=(0,i.Lk)("p",null," Working on Lyve Pilot at Seagate was a transformative experience that helped me grow both technically and professionally. Here are my key takeaways from the project: ",-1)),(0,i.Lk)("div",w,[(0,i.bF)(E,{title:"Splitting Tasks Appropriately",description:"Work on Lyve Pilot, I was talk the value of splitting tasks appropriately and making incremental progress in order to avoid interference with other engineers.",backgroundColor:"#E7EDE8",number:1}),(0,i.bF)(E,{title:"Fullstack Experience",description:"This project added backend experience to my skillset, allowing me to work across the stack and understand the full picture of a project.",backgroundColor:"#E7EDE8",number:2}),(0,i.bF)(E,{title:"Test First Approach",description:"While working on Lyve Pilot, I was able to see the value of a test first approach, ensuring high quality code from the beginning and reducing the amount of bugs in the codebase.",backgroundColor:"#E7EDE8",number:3}),(0,i.bF)(E,{title:"Cross-Team Collaboration",description:"Working with hardware teams, UX designers, and product managers helped me develop strong communication skills and appreciate the value of diverse perspectives in product development.",backgroundColor:"#E7EDE8",number:4})])])),_:1})])),_:1})])):((0,i.uX)(),(0,i.CE)("div",d,[(0,i.Lk)("div",c,[t[3]||(t[3]=(0,i.Lk)("h2",null,"Password Required",-1)),(0,i.bo)((0,i.Lk)("input",{"onUpdate:modelValue":t[0]||(t[0]=e=>F.passwordInput=e),type:"password",placeholder:"Enter password",onKeyup:t[1]||(t[1]=(0,r.jR)(((...e)=>x.checkPassword&&x.checkPassword(...e)),["enter"])),class:"password-input"},null,544),[[r.Jo,F.passwordInput]]),(0,i.Lk)("button",{onClick:t[2]||(t[2]=(...e)=>x.checkPassword&&x.checkPassword(...e)),class:"password-btn"},"Submit"),F.passwordError?((0,i.uX)(),(0,i.CE)("div",u,"Incorrect password. Please try again.")):(0,i.Q3)("",!0)])]))])}var F=o(1934);const x="vport2025";var C={name:"seagateWork",components:{ReflectionItem:F.A},data(){return{filter_array:[],passwordInput:"",showContent:!1,passwordError:!1}},methods:{checkPassword(){this.passwordInput===x?(this.showContent=!0,this.passwordError=!1):this.passwordError=!0}}},_=o(1241);const T=(0,_.A)(C,[["render",L],["__scopeId","data-v-28a33fe5"]]);var P=T}}]);
//# sourceMappingURL=680.46031381.js.map