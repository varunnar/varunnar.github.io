{"version":3,"file":"js/243.ad876c0e.js","mappings":"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","sources":["webpack://varun-website-updated/./src/views/youtubeDataAnalysis.vue","webpack://varun-website-updated/./src/views/youtubeDataAnalysis.vue?a245"],"sourcesContent":["<template>\n    <fadeInComponent>\n        <sectionContainer class=\"red_off_section introduction\">\n            <h1>Youtube Stats Analyzer</h1>\n            <p>A passion project that providers users with visualizations of their youtube usage data</p>\n            <div class=\"youtube_analysis_hero_img\"></div>\n            <p>Youtube Stats Analyzer is a project that aims to provide users with a visual representation of their youtube usage data.\n                 The project will analyze the user's youtube data and provide them with insights on their usage patterns. \n                 The project also providers users with an A.I. generated list of recommendations based on the youtubers they watch.</p>\n        </sectionContainer>\n    </fadeInComponent>\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_section purpose\">\n            <h2>Purposes and Technologies Used</h2>\n            <p>I approached this project to learn more about the following technologies and frameworks</p>\n            <div class=\"grid_3fr_1fr\">\n                <div style=\"display: flex; flex-direction: column; align-items: center; text-align: center;\">\n                    <h3>Youtube Data API</h3> \n                    <!-- <imageObject src=\"/src/assets/youtube_data_analysis/google_cloud.png\" w=\"200px\" alt=\"logo for Google Cloud API - a rainbow cloud logo\"></imageObject> -->\n                    <div role=\"image\" class=\"language_img youtube_img\" alt=\"logo for Google Cloud API - a rainbow cloud logo\"></div>\n                    <p>Learn how to use the a google Cloud API to access user data</p>\n                </div>\n                <div style=\"display: flex; flex-direction: column; align-items: center; text-align: center;\">\n                    <h3>D3.js</h3>\n                    <div role=\"image\" class=\"language_img d3_img\" alt=\"logo for D3 visualization - an orange D and 3\"></div>\n                    <p>Learn how to use D3.js to create visualizations</p>\n                </div>\n                <div style=\"display: flex; flex-direction: column; align-items: center; text-align: center;\">\n                    <h3>React.js</h3>\n                    <div role=\"image\" class=\"language_img react_img\" alt=\"logo for react native - a baby blue neutron shape\"></div>\n                    <p>Learn how to use React.js to create a web application</p>\n                </div>\n            </div>\n        </sectionContainer>\n    </fadeInComponent>\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_off_section youtubeData\">\n            <h2>Investigating Google Youtube Data API</h2>\n            <p>My first step in building out my webpage was finding the core of any visualization - <b>Data!</b> \n                Finding interesting and usable data to build off of was key to my visualizations. \n                I wanted data that was <b>personal</b> to each person, so as to make a more engaging experience. \n                After some time I chose to collect data from Google's Youtube API - building in code to allow the \n                user to login themselves and recieve custom visualizations based on their data.</p>\n            <img src=\"../assets/youtube_data_analysis/youtubeGoogleCloud.png\" style=\"width: 100%; height: auto; border-radius: 5px;\"/>\n            <p>After familiarizing myself with the platform, I needed to understand <b>How to collect my data.</b> What data I actually had access \n                to would determine what types of visualization I could do. The following are the routes I used to collect my data</p>\n            <img src=\"../assets/youtube_data_analysis/youtubeAPIRoutes.png\" style=\"width: 100%; height: auto; border-radius: 5px;\"/>\n            <p>This process provided me with data on the users <b>most recent subscriptions</b> (people they had subscribed to), and their <b>liked recent videos.</b></p>\n        </sectionContainer>\n    </fadeInComponent>\n\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_section D3\">\n            <div class=\"grid_4fr_2fr_1fr\">\n            <div style=\"margin-top: auto; margin-bottom: auto;\">\n            <h2>Utilizing D3.js</h2>\n            <p>D3.js was my choice of visualization language. I have previously\n                explored languages such as Vegalite.js heavily but wanted to work with a more robust language</p>\n            <p>My approach was to initially build the visualizations in Observable, \n                an online coding notebook that includes large amounts of the D3 documentation. \n                After completing the visualizations I would move them to my personal code and shift the code to React.js code.</p>\n            </div>\n            <img src=\"../assets/youtube_data_analysis/observableHQ.png\" width=\"100%\" height=\"100%\">\n            <!-- <div role=\"image\" class=\"observableHQ\" alt=\"Image of observableHQ world map visualization and code alongside it.\"></div> -->\n        </div>\n        </sectionContainer>\n    </fadeInComponent>\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_off_section react\">\n            <h2>React.js D3 integration</h2>\n            <p>After completing the visualizations within observable, it is important to integrate them into react. The following were steps that were needed to take.</p>\n            <slideshow\n                folderPath=\"/assets/youtubeDataViz/code\"\n                fileType=\"png\"\n                :numberOfImages=\"3\"\n                :autoPlay=\"false\"\n                :headerArray=\"['Code to Initialize Google Sign In', 'Functions for Fetching Youtube Information', 'Components for each Visualization']\"\n                :bottomControls=\"true\"\n            ></slideshow>\n        </sectionContainer>\n    </fadeInComponent>\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_section visualizations\">\n            <div class=\"flex_spacing_SB\">\n                <div style=\"margin-top: auto; margin-bottom: auto;\">\n                    <h1>Visualizations</h1>\n                </div>\n                <slideshow style=\"max-width: 50%;\"\n                    folderPath=\"/assets/youtubeDataViz/viz\"\n                    fileType=\"png\"\n                    :numberOfImages=\"5\"\n                    :autoPlay=\"false\"\n                >\n                </slideshow> \n            </div>\n            <!-- <div class=\"flex_spacing_SA\" style=\"gap: 20\">\n                <img class=\"visualization_image\" src=\"../../public/assets/youtubeDataViz/viz_0.png\"/>\n                <img class=\"visualization_image\" src=\"../../public/assets/youtubeDataViz/viz_1.png\"/>\n                <img class=\"visualization_image\" src=\"../../public/assets/youtubeDataViz/viz_2.png\"/>\n                <img class=\"visualization_image\" src=\"../../public/assets/youtubeDataViz/viz_3.png\"/>\n                <img class=\"visualization_image\" src=\"../../public/assets/youtubeDataViz/viz_4.png\"/>\n            </div> -->\n        </sectionContainer>\n    </fadeInComponent>\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_off_section AI_implementation\">\n            <h2>Implementing in A.I. summaries</h2>\n            <p>While visualizations are powerful and can help summarize confusing masses of data, \n                they themselves can still be confusing, especially with large visualizations and interactions.\n                In order to give a quick summary, I connected to the Gemini A.I. API, and allowed users to get summaries and\n                 recommendations on their visualizations and each step.</p>\n        </sectionContainer>\n    </fadeInComponent>\n\n\n    <fadeInComponent>\n        <sectionContainer class=\"red_section next_steps\">\n            <h2>Next Steps</h2>\n            <div class=\"grid_3fr_1fr\">\n                <div class=\"center_spacing_rows\">\n                    <h3>Youtube History Inclusion</h3>\n                    <p>Using liked videos and subscriptions is valuable, but for more casual youtube users, historical video visualizations is more interesting and relevent. The Google Cloud API does not provide an endpoint for this, but I hope to investigate it more </p>\n                </div>\n                <div class=\"center_spacing_rows\">\n                    <h3>Backend Microservices</h3>\n                    <p> The current frontend collects both the youtube and AI data directly. However, in traditional use cases, this task would instead be completed by a backend. I hope to create two microservices, one for AI and one for google cloud.  </p>\n                </div>\n                <div class=\"center_spacing_rows\">\n                    <h3>Publish Webpage Officially</h3>\n                    <p>After collecting the necessary data, and further building out the architecture, I hope to publish this webpage. This would include <b>defining a domain for the frontend and backend, allow all emails on Google Cloud API</b> and <b>considering more robust token usage.</b></p>\n                </div>\n            </div>\n        </sectionContainer>\n    </fadeInComponent>\n    \n</template>\n\n<script>\nimport slideshow from '@/components/widgets/slideshow.vue'\n\n\nexport default {\n  components: { slideshow },\n   name: 'YoutubeDataAnalysis',\n   data() {\n     return {\n     }\n   },\n   methods: {\n   }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.section {\n    text-align: left;\n}\n.introduction {\n    text-align: center;\n}\n.youtube_analysis_hero_img {\n    background-image: url('../assets/youtube_data_analysis/data_viz_hero_img.png');\n    background-size: cover;\n    background-position: center;\n    width: 90%;\n    aspect-ratio: 16/10;\n    margin: 0 auto;\n    // border-radius: 50%;\n}\n\n.language_img {\n    background-size: contain;\n    background-repeat: no-repeat;\n    width: 200px;\n    aspect-ratio: 1/1;\n}\n\n.visualization_image {\n    width: 30%;\n    aspect-ratio: 1/1 auto;\n}\n\n.youtube_img {\n    background-image: url('/src/assets/youtube_data_analysis/google_cloud.png');\n}\n\n.react_img {\n    background-image: url('/src/assets/youtube_data_analysis/react_logo.png');\n}\n\n.d3_img {\n    background-image: url('/src/assets/youtube_data_analysis/d3.png');\n}\n\n.observableHQ {\n    background-image: url('/src/assets/youtube_data_analysis/observableHQ.png');\n    width: 100%;\n    aspect-ratio: 1/1;\n    background-size: contain;\n    background-repeat: no-repeat;\n    margin: auto;\n    border-radius: 10px;\n}\n\np b {\n    font-weight: 900;\n}\n</style>\n","import { render } from \"./youtubeDataAnalysis.vue?vue&type=template&id=d3009346&scoped=true\"\nimport script from \"./youtubeDataAnalysis.vue?vue&type=script&lang=js\"\nexport * from \"./youtubeDataAnalysis.vue?vue&type=script&lang=js\"\n\nimport \"./youtubeDataAnalysis.vue?vue&type=style&index=0&id=d3009346&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d3009346\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_Fragment","_createVNode","_component_fadeInComponent","default","_withCtx","_component_sectionContainer","_cache","_createElementVNode","_","style","role","alt","_createTextVNode","src","_imports_0","_imports_1","_imports_2","width","height","_component_slideshow","folderPath","fileType","numberOfImages","autoPlay","headerArray","bottomControls","_hoisted_1","components","slideshow","name","data","methods","__exports__","render"],"sourceRoot":""}